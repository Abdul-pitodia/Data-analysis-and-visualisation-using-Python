# -*- coding: utf-8 -*-
"""Heart Disease - Data Visualisation, EDA, Logistic Regression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CvwKhFiOON5DA_TunYJHWJ_XeTTbF5UV
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

heart = pd.read_csv('heart.csv')

heart.head()

heart.isna().sum()

heart.info()

heart.shape

heart.sample(10)

sns.scatterplot(y='age',x='target',data=heart,)

plt.figure(figsize=(14,6))
sns.barplot(x='age',y='chol',data=heart)

plt.figure(figsize=(14,14))
sns.heatmap(heart.corr(),cmap='plasma',annot=True,fmt=".2f",linewidths=0.5)

heart.cp.value_counts()
sns.countplot(x='cp',hue='target',data=heart)

sns.scatterplot(x='target',y='chol',data=heart,hue='sex')

sns.distplot(a=heart.chol)

graph = sns.barplot(data=heart,x='sex',y='chol',hue='target')
graph.set_xticklabels(('Female','Male'))

feature_frame = heart.drop('target',axis=1)
feature_frame.corrwith(heart.target).plot(kind='bar',figsize=(14,6),grid=True)

sns.countplot(x='exang',hue='target',data=heart)

sns.distplot(a=heart[heart["target"] == 0]['age'],kde=True,color='blue',label='no heart disease')
sns.distplot(a=heart[heart["target"] == 1]['age'],kde=True,color='red',label='yes heart disease')
plt.legend()

sns.set(style='darkgrid')
sns.kdeplot(data=heart[heart['target']==0]['age'],shade=True,color='blue',label='No Disease')
sns.kdeplot(data=heart[heart['target']==1]['age'],shade=True,color='red',label='Yes Disease')
plt.xlabel("Age")

plt.figure(figsize=(14,6))
sns.set(style='darkgrid')
ft_frame = heart.loc[:,['age','chol','trestbps','thalach']]
for i , column in enumerate(ft_frame):
  plt.subplot(2,2,i+1)
  print(i,column)
  sns.kdeplot(data=heart[heart['target']==0][column],shade=True,color='blue',label='No Disease')
  sns.kdeplot(data=heart[heart['target']==1][column],shade=True,color='red',label='Yes Disease')
  plt.xlabel(column)

plt.figure(figsize=(14,6))
plt.subplot(1,2,1)
sns.distplot(a=heart['trestbps'][heart['target']==0],color='blue',kde=False,label='Has NO disease')
sns.distplot(a=heart['trestbps'][heart['target']==1],color='red',kde=False,label='Has YES disease')

plt.subplot(1,2,2)
sns.distplot(a=heart['chol'][heart['target']==0],color='blue',kde=False,label='Has NO disease')
sns.distplot(a=heart['chol'][heart['target']==1],color='red',kde=False,label='Has YES disease')
plt.legend()

categ_var = ['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal']
dataset = pd.get_dummies(heart,columns=categ_var)
dataset.head()
dataset.shape

print(heart.columns)
print(dataset.columns)

from sklearn.model_selection import train_test_split

train,test = train_test_split(heart,test_size=0.2)


#Train is 70% data of whole dataset
#Test is 30% data of whole dataset

X_train = train.drop('target',axis=1)
X_test = test.drop('target',axis=1)
y_train = train.target
y_test = test.target

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import cross_val_predict,cross_val_score
from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score, f1_score
log_reg = LogisticRegression(solver='liblinear')
log_reg.fit(X_train,y_train)

scores = cross_val_score(log_reg, X_train, y_train, cv=10)
print("Accuracy: %0.2f (+/- %0.2f)" % (scores.mean(), scores.std() * 2))

#print("cross validation accuracy is", accuracy_score(y_train, predicted)*100)

pred = log_reg.predict(X_test)

cm = confusion_matrix(y_test,pred)
print(accuracy_score(y_test,pred))
cm_heatmap = sns.heatmap(data=cm,annot=True)
cm_heatmap.set_xticklabels(('NO','YES'))
cm_heatmap.set_yticklabels(('NO','YES'))